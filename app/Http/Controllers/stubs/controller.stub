<?php

namespace App\Http\Controllers;

use App\Contracts\Repositories\UserRepository;
use App\Contracts\Repositories\#modelName#Repository;
use App\Http\Requests\Create#modelName#Post;
use App\Http\Requests\Update#modelName#Post;
use Illuminate\Http\Request;
use Illuminate\Auth\Events\Registered;
use Illuminate\Support\Facades\Hash;

class #modelName#Controller extends Controller
{
     /**
     * The token repository instance.
     *
     * @var \Laravel\Spark\Contracts\Repositories\#modelName#Repository
     */
    protected $user, $#camelModelName#;

    protected $redirectTo = '/#url#/';

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct(UserRepository $user, #modelName#Repository $#camelModelName#)
    {
        $this->user = $user;
        $this->#camelModelName# = $#camelModelName#;
        $this->middleware('auth');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        $this->user->authorize('#camelModelName#.all');

        $data = [
            '#camelTableName#'=>$this->#camelModelName#->get#tableName#($request->key),
        ];

        return view("#url#", $data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $this->user->authorize('#camelModelName#.edit');

        return view("#url#.create");
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Create#modelName#Post $request)
    {
        $this->user->authorize('#camelModelName#.edit');

        $data = $request->only([
            #controller.store.item#
        ]);

        $#camelModelName# = $this->#camelModelName#->create($data);

        return redirect($this->redirectTo);
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $this->user->authorize('#camelModelName#.all');

        $data = [
            '#camelModelName#'=>$this->#camelModelName#->find($id),
        ];

        return view("#url#.show", $data);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $this->user->authorize('#camelModelName#.edit');

        $data = [
            '#camelModelName#'=>$this->#camelModelName#->find($id),
        ];

        return view("#url#.edit", $data);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Update#modelName#Post $request, $id)
    {
        $this->user->authorize('#camelModelName#.edit');

        $data = $request->only([
            #controller.store.item#
        ]);

        $this->#camelModelName#->update($id, $data);

        return $request->ajax() ? "" : redirect($this->redirectTo);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $this->user->authorize('#camelModelName#.edit');

        $this->#camelModelName#->destroy($id);

        return request()->ajax() ? "" : redirect($this->redirectTo);
    }
}

<?php

namespace App\Http\Controllers;

use App\Contracts\Repositories\#studlyName#Repository;
use App\Http\Requests\Create#studlyName#Post;
use App\Http\Requests\Update#studlyName#Post;
use Illuminate\Http\Request;
use Illuminate\Auth\Events\Registered;
use Illuminate\Support\Facades\Hash;

class #studlyName#Controller extends Controller
{
     /**
     * The token repository instance.
     *
     * @var \Laravel\Spark\Contracts\Repositories\#studlyName#Repository
     */
    protected $#snakeStudlyName#;

    protected $redirectTo = '/#url#/';

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct(#studlyName#Repository $#camelStudlyName#)
    {
        $this->#camelStudlyName# = $#camelStudlyName#;
        $this->middleware('auth');
    }
    
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $data = [
            '#camelPluralStudlyName#'=>$this->#camelStudlyName#->paginate(),
        ];

        return view("#snakeStudlyName#", $data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view("#snakeStudlyName#.create");
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Create#studlyName#Post $request)
    {
        $data = $request->only([
            #controller.store.item#
        ]);

        $#camelStudlyName# = $this->#camelStudlyName#->create($data);
        
        return redirect($this->redirectTo);
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $data = [
            '#camelStudlyName#'=>$this->#camelStudlyName#->find($id),
        ];

        return view("#snakeStudlyName#.show", $data);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $data = [
            '#camelStudlyName#'=>$this->#camelStudlyName#->find($id),
        ];

        return view("#snakeStudlyName#.edit", $data);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Update#studlyName#Post $request, $id)
    {
        $data = $request->only([
            #controller.store.item#
        ]);

        $this->#camelStudlyName#->update($id, $data);

        return $request->ajax() ? ""  : redirect($this->redirectTo);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $this->#camelStudlyName#->destroy($id);

        return request()->ajax() ? ""  : redirect($this->redirectTo);
    }
}

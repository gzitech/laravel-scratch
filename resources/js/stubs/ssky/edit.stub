module.exports = {

    props: {
        #snakeStudlyName#: {
            type: Object,
            required: true,
        },
        old: {
            type: [Object, Array],
            required: true,
        },
        errors: {
            type: [Object, Array],
            required: true,
        },
    },

    data() {
        return {
            #camelStudlyName#EditForm: new SSky.Form({
                #edit.return.item#
            }),
        };
    },


    watch: {
        #snakeStudlyName#: function (#camelStudlyName#) {
            this.#camelStudlyName#EditForm.resetStatus();
            #edit.watch.item#
        }
    },

    created() {

        if (typeof this.errors === 'object') {
            this.#camelStudlyName#EditForm.setErrors(this.errors);
        }
    },


    methods: {

        validate#studlyName#EditForm: function (event) {
            event.preventDefault();

            this.#camelStudlyName#EditForm.startProcessing();

            if (this.#camelStudlyName#EditForm.validate({
                #edit.validate.item#
            })) {
                var url = '/#snakeStudlyName#/' + this.#snakeStudlyName#.id + '/';

                SSky.put(url, this.#camelStudlyName#EditForm)
                    .then(response => {
                        var data = this.#camelStudlyName#EditForm.getData();
                        data.id = this.#snakeStudlyName#.id;
                        this.$emit('#kebabStudlyName#-updated', data);
                        this.#camelStudlyName#EditForm.finishProcessing();
                    });
            } else {
                this.#camelStudlyName#EditForm.finishProcessing();
            }
        },
    },


    computed: {

    }
};